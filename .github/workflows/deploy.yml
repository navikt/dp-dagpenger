name: Build and deploy

on: [push]

env:
  IMAGE: ghcr.io/${{ github.repository }}/dp-dagpenger:${{ github.sha }}

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up node
        uses: actions/setup-node@v2
        with:
          node-version: "16.x"
          cache: "npm"
          registry-url: "https://npm.pkg.github.com"

      - run: npm install --no-save --no-audit --prefer-offline
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}

      - run: npm test

  build:
    name: Build and Publish Docker image
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to GitHub Package Repository
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up .npmrc to use in Docker build
        uses: actions/setup-node@v2
        with:
          registry-url: "https://npm.pkg.github.com"

      - run: cp $NPM_CONFIG_USERCONFIG .npmrc

      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: ${{ env.IMAGE }}
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          secrets: |
            "SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}"
            "NODE_AUTH_TOKEN=${{ secrets.READER_TOKEN }}"
          build-args: |
            SENTRY_RELEASE=${{ github.sha }}

      - name: Archive NAIS yaml
        uses: actions/upload-artifact@v1
        with:
          name: nais-yaml
          path: .nais

  deploy-dev:
    name: Deploy to dev
    needs: [test, build]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Fetch NAIS yaml
        uses: actions/download-artifact@v1
        with:
          name: nais-yaml
          path: .nais

      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/nais.yaml
          VARS: .nais/dev.yaml
          PRINT_PAYLOAD: true

  #      - name: Lag deployment i Sentry
  #        uses: getsentry/action-release@v1
  #        env:
  #          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
  #          SENTRY_URL: https://sentry.gc.nav.no
  #          SENTRY_ORG: nav
  #          SENTRY_PROJECT: dp-dagpenger
  #        with:
  #          environment: development
  #          version: ${{ github.sha }}
  #          set_commits: skip

  deploy-prod:
    name: Deploy to Production
    needs: [test, build]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Fetch NAIS yaml
        uses: actions/download-artifact@v1
        with:
          name: nais-yaml
          path: .nais

      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: .nais/nais.yaml
          VARS: .nais/prod.yaml
          PRINT_PAYLOAD: true
#      - name: Lag deployment i Sentry
#        uses: getsentry/action-release@v1
#        env:
#          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
#          SENTRY_URL: https://sentry.gc.nav.no
#          SENTRY_ORG: nav
#          SENTRY_PROJECT: dp-dagpenger
#        with:
#          environment: production
#          version: ${{ github.sha }}
#          set_commits: skip
