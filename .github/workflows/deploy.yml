name: Build and deploy

on: [push]

env:
  IMAGE: docker.pkg.github.com/${{ github.repository }}/dp-dagpenger:${{ github.sha }}
  LATEST_IMAGE: docker.pkg.github.com/${{ github.repository }}/dp-dagpenger:latest

jobs:
  test:
    name: Run tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up node
        uses: actions/setup-node@v1
        with:
          node-version: "15.x"

      - name: Cache node modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: |
            ~/.npm
            node_modules
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Test
        run: |
          npm install --no-save --no-audit
          npm test

  build:
    name: Build and Publish Docker image
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: docker.pkg.github.com
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        env:
          DOCKER_BUILDKIT: 1
        run: |
          docker build . -t ${{ env.IMAGE }} -t ${{ env.LATEST_IMAGE }} \
            --build-arg BUILDKIT_INLINE_CACHE=1
          docker push ${{ env.IMAGE }}
          docker push ${{ env.LATEST_IMAGE }}

      - name: Archive NAIS yaml
        if: github.ref == 'refs/heads/main'
        uses: actions/upload-artifact@v1
        with:
          name: nais-yaml
          path: .nais

  deploy-dev:
    name: Deploy to dev
    needs: [test, build]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Fetch NAIS yaml
        uses: actions/download-artifact@v1
        with:
          name: nais-yaml
          path: .nais

      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: dev-gcp
          RESOURCE: .nais/nais.yaml,.nais/redis.yaml
          VARS: .nais/dev.yaml
          PRINT_PAYLOAD: true

  deploy-prod:
    name: Deploy to Production
    needs: [deploy-dev]
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Fetch NAIS yaml
        uses: actions/download-artifact@v1
        with:
          name: nais-yaml
          path: .nais

      - uses: nais/deploy/actions/deploy@v1
        env:
          APIKEY: ${{ secrets.NAIS_DEPLOY_APIKEY }}
          CLUSTER: prod-gcp
          RESOURCE: .nais/nais.yaml,.nais/redis.yaml
          VARS: .nais/prod.yaml
          PRINT_PAYLOAD: true
